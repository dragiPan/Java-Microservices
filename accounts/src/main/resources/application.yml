server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
      show-sql: true
  sql:
    init:
      mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "accounts"
    description: "Accounts Microservice"
    version: "1.0.0"

logging:
  level:
    com:
      microservice:
        accounts: DEBUG
  pattern:
    level: "%5p[${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 1000
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        ignore-exceptions:
          - java.lang.NullPointerException
        retry-exceptions:
          - java.util.concurrent.TimeoutException
  ratelimiter:
    configs:
      default:
        timeout-duration: 1000
        limit-refresh-period: 5000
        limit-for-period: 1